{"version":3,"file":"static/js/111.e5dd9aae.chunk.js","mappings":"mPAoDA,EA9CkB,WAChB,IAAMA,GAAWC,EAAAA,EAAAA,MACjBC,GAAoCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GA0BhC,OACEI,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,EAAAA,OAAWH,SAAC,YAC3BF,EAAAA,EAAAA,MAAA,QAAMI,UAAWC,EAAAA,EAAAA,KAAUC,SA3Bd,SAAAC,GACfA,EAAEC,iBACF,IAAAC,EAA4BF,EAAEG,cAAtBC,EAAKF,EAALE,MAAOC,EAAQH,EAARG,SACTC,EAAY,CAChBF,MAAOA,EAAMG,MACbF,SAAUA,EAASE,OAIhBH,GAAUC,EAKfpB,GAASuB,EAAAA,EAAAA,IAAMF,IACZG,MAAK,WACJjB,EAAc,MACdQ,EAAEG,cAAcO,OAClB,IACCC,OAAM,WACLnB,EAAc,4BAChB,IAXAA,EAAc,uCAYlB,EAKmDoB,aAAa,MAAKjB,SAAA,EAC/DF,EAAAA,EAAAA,MAAA,SAAOI,UAAWC,EAAAA,EAAAA,MAAUH,SAAA,CAAC,SAE3BC,EAAAA,EAAAA,KAAA,SAAOiB,KAAK,QAAQC,KAAK,cAE3BrB,EAAAA,EAAAA,MAAA,SAAOI,UAAWC,EAAAA,EAAAA,MAAUH,SAAA,CAAC,YAE3BC,EAAAA,EAAAA,KAAA,SAAOiB,KAAK,WAAWC,KAAK,gBAE7BvB,IAAcK,EAAAA,EAAAA,KAAA,KAAGmB,MAAO,CAAEC,MAAO,OAAQrB,SAAEJ,KAC5CK,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAAA,EAAAA,IAASe,KAAK,SAAQlB,SAAC,gBAIlD,EC5CA,EAJc,WACV,OAAOC,EAAAA,EAAAA,KAACqB,EAAS,GACrB,C,qBCJA,KAAgB,KAAO,2BAA2B,OAAS,6BAA6B,OAAS,6BAA6B,MAAQ,4BAA4B,IAAM,0B","sources":["components/LoginForm/LoginForm.jsx","pages/Login.jsx","webpack://react-homework-template/./src/components/RegisterForm/RegisterForm.module.css?a5d4"],"sourcesContent":["import { useDispatch } from \"react-redux\";\nimport { login } from \"redux/authOperations\";\nimport  css  from \"../RegisterForm/RegisterForm.module.css\";\nimport { useState } from \"react\";\n// import { useForm } from \"react-hook-form\";\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const [loginError, setLoginError] = useState(null);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const { email, password } = e.currentTarget;\n    const userLogin = {\n      email: email.value,\n      password: password.value,\n    }\n    //   dispatch(login(userLogin));\n\n    if (!email || !password) {\n      setLoginError(\"Please enter both email and password\");\n      return;\n    }\n\n    dispatch(login(userLogin))\n      .then(() => {\n        setLoginError(null);\n        e.currentTarget.reset();\n      })\n      .catch(() => {\n        setLoginError(\"Invalid email or password\");\n      });\n  };\n    \n  return (\n    <>\n      <h2 className={css.signin}>Log In</h2>\n      <form className={css.form} onSubmit={onSubmit} autoComplete=\"off\">\n        <label className={css.label}>\n          Email\n          <input type=\"email\" name=\"email\" />\n        </label>\n        <label className={css.label}>\n          Password\n          <input type=\"password\" name=\"password\" />\n        </label>\n        {loginError && <p style={{ color: \"red\" }}>{loginError}</p>}\n        <button className={css.btn} type=\"submit\">Log In</button>\n      </form>\n    </>\n  );\n};\nexport default LoginForm;","import React from \"react\";\nimport LoginForm from \"components/LoginForm/LoginForm\";\n\nconst Login = () => {\n    return <LoginForm />\n};\n\nexport default Login;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterForm_form__Tv43W\",\"signup\":\"RegisterForm_signup__aAqSZ\",\"signin\":\"RegisterForm_signin__j29C+\",\"label\":\"RegisterForm_label__4pTXF\",\"btn\":\"RegisterForm_btn__bgTuW\"};"],"names":["dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","loginError","setLoginError","_jsxs","_Fragment","children","_jsx","className","css","onSubmit","e","preventDefault","_e$currentTarget","currentTarget","email","password","userLogin","value","login","then","reset","catch","autoComplete","type","name","style","color","LoginForm"],"sourceRoot":""}