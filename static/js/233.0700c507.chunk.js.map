{"version":3,"file":"static/js/233.0700c507.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","components/ContactList/ContactItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx","webpack://react-homework-template/./src/components/RegisterForm/RegisterForm.module.css?a5d4"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Formik, Field, Form } from \"formik\";\nimport { addContact } from \"redux/contactsOperations\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport css from \"../RegisterForm/RegisterForm.module.css\";\n\nexport default function ContactForm({ onSubmit }) {\n  const [name] = useState('');\n  const [number] = useState('');\n  const value = { name, number };\n\n  const dispatch = useDispatch();\n\n  const {items} = useSelector(state => state.contacts);\n  const handleLocalSubmit = ({ name, number }, { resetForm }) => {\n  const newState = {\n    name,\n    number,\n    };\n    \n    if (items.find(({ name }) => name === newState.name)) {\n      return alert(`${newState.name} is already in contacts.`);\n    }\n    // onSubmit(newState);\n    dispatch(addContact(newState));\n    resetForm();\n  }\n\n  return (\n    <Formik initialValues={value} onSubmit={handleLocalSubmit}>\n      <Form className={css.form}>\n      <label className={css.label}>\n        Name:\n        <Field\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n\n      <label className={css.label}>\n        Number:\n        <Field\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n\n        <button className={css.btn} type=\"submit\">Add contact</button>\n        </Form>\n    </Formik>\n  );\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\n// import { deleteContact } from 'redux/contactsSlice';\nimport { deleteContact } from 'redux/contactsOperations';\n\nconst ContactItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <li>\n      {name}: {number}\n      <button onClick={() => dispatch(deleteContact(id))}>Delete</button>\n    </li>\n  );\n}\nexport default ContactItem;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport ContactItem from './ContactItem';\nimport css from \"./ContactList.module.css\";\n\nconst ContactList = ({ children }) => {\n  const { items } = useSelector(state => state.contacts);\n  const { filter } = useSelector(state => state.filter);\n\n  const filteredContacts = () => {\n    if (filter === '') return items;\n\n    return items.filter(({name}) => name.toLowerCase().includes(filter.toLowerCase()));\n  };\n\n  const filterContacts = filteredContacts();\n\n  return (\n    <div>\n      <ul className={css.list}>\n        { children }\n        {filterContacts.map(({ id, name, number }) => (\n          <ContactItem key={id} name={name} id={id} number={number} />\n        ))}\n      </ul>\n    </div>\n  );\n};\nexport default ContactList;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n// import { setFilter } from './filterSlice';\nimport { setFilter } from 'redux/filterSlice';\nimport css from \"../RegisterForm/RegisterForm.module.css\";\n\nconst Filter = () => {\n  const { filter } = useSelector((state) => state.filter);\n  const dispatch = useDispatch();\n\n  const handleFilterChange = (event) => {\n    dispatch(setFilter(event.target.value));\n  };\n  return (\n    <div className={css.form}>\n      <label className={css.label}>\n        Find contacts by name:\n        <input\n          type=\"text\"\n          value={filter}\n          name=\"filter\"\n          onChange={handleFilterChange}\n        />\n      </label>\n    </div>\n  );\n};\nexport default Filter;","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useAuth } from \"hooks/useAuth\";\nimport { fetchContacts } from \"redux/contactsOperations\";\nimport ContactForm from \"components/ContactForm/ContactForm\";\nimport ContactList from \"components/ContactList/ContactList\";\nimport Filter from \"components/Filter/Filter\";\nimport css from \"../components/RegisterForm/RegisterForm.module.css\";\n\nconst Contacts = () => {\n    const dispatch = useDispatch();\n    const isLoggedIn = useAuth();\n\n    useEffect(() => {\n        if (isLoggedIn) {\n            dispatch(fetchContacts());\n        }\n    }, [dispatch, isLoggedIn]);\n\n    return (\n        <>\n            <h1 className={css.signup}>Phonebook</h1>\n            <ContactForm />\n            <h2 className={css.signup}>Contacts</h2>\n            <Filter />\n            <ContactList />\n        </>\n    );\n};\nexport default Contacts;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterForm_form__Tv43W\",\"signup\":\"RegisterForm_signup__aAqSZ\",\"signin\":\"RegisterForm_signin__j29C+\",\"label\":\"RegisterForm_label__4pTXF\",\"btn\":\"RegisterForm_btn__bgTuW\"};"],"names":["ContactForm","_ref","onSubmit","_useState","useState","name","_slicedToArray","_useState3","value","number","dispatch","useDispatch","items","useSelector","state","contacts","_jsx","Formik","initialValues","_ref2","_ref3","resetForm","newState","find","_ref4","alert","concat","addContact","children","_jsxs","Form","className","css","Field","type","pattern","title","required","id","onClick","deleteContact","filter","filterContacts","toLowerCase","includes","map","ContactItem","onChange","event","setFilter","target","isLoggedIn","useAuth","useEffect","fetchContacts","_Fragment","Filter","ContactList"],"sourceRoot":""}